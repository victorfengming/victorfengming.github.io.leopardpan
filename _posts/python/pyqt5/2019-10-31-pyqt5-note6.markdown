---
layout: post
title: "PyQt5学习笔记6"
date: 2019-10-31 
tags: Python solution basis PyQt5
---

  
# PyQt5的第六课 - PyQt5类的封装
### 知识回顾
- 1.掌握纯代码写pyqt5程序
- 2.显示提示框tooltip功能(这个玩意在所有的控件中都是存在的)

### 代码封装思路
- 分析哪些代码需要封装:需要封装的就是我们对窗体配置的代码
- 利用类的继承特性
- 调用父类Qwidget的构造方法`super().__init__()`
- 调用自己的构造方法

### 用类的方式去实现空的窗口的代码
```python
import sys

from PyQt5.QtWidgets import QWidget,QApplication



class MyClass(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        self.setWindowTitle("刘金玉编程")
        self.setGeometry(30,40,300,200)
        self.show()
if __name__ == '__main__':
    app = QApplication(sys.argv)
    c = MyClass()
    app.exec_()
```
### GUI位置大小函数setGeometry

- 这个函数相当于resize函数和remove函数功能的合体
- 函数使用格式:
    控件对象.setGeometry(X轴,Y轴,宽度,高度)
    
### 信号
- 窗体上的信号被app.exec_()死循环监听着.
- 信号至少在QT中针对某个发生的时间的说法
- 槽是QT中发生的具体的某个时间,就是槽
- 窗体上的对GUI界面操作行为都是被监听着的
- GUI是被事件驱动的
    

### 信号槽的简单使用
- 格式:信号源.信号.connect(槽)
- 格式解释:信号源(按钮)信号(clicked).connet(某个事件方法)
- 注意:在绑定信号槽的过程汇总,我们的槽方法可以不加括号的,传递的是方法的引用本身
说白了,我要的是函数,而不是函数的返回值,这里如果想要加上参数,就用lambda 吧!

### 加入了按钮的点击关闭时间的代码    
```python
import sys

from PyQt5.QtWidgets import QWidget, QApplication, QPushButton


class MyClass(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        self.setWindowTitle("刘金玉编程")
        self.setGeometry(30,40,300,200)
        btn = QPushButton("关闭",self)
        btn.move(5,6)
        # 将信号发送到一个槽
        # 设置按钮的点击后关闭窗体的时间
        btn.clicked.connect(self.close)
        self.show()

app = QApplication(sys.argv)
c = MyClass()
app.exec_()
```

### 总结强调
1. 掌握类的继承QWidget的基本思想
2. 掌握类的功能封装
3. 掌握setGeometry函数
4. 掌握简单的信号槽的使用